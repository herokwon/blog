name: Deployment

on:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 60
    outputs:
      result: ${{ steps.deploy.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env

      - name: Build for Cloudflare Workers
        run: pnpm build:worker

      - name: Deploy Worker
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true

  send-slack-message:
    name: Send Slack message
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check a latest pull request
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const result = (await github.rest.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data;

            if (result.length === 0) throw new Error(`No pull request found for commit ${context.sha}.`);
            const latestPr = result[0];

            return {
              commit: latestPr.merge_commit_sha.substring(0, 7),
              number: latestPr.number,
              title: latestPr.title,
              url: latestPr.html_url,
              avatar_url: context.payload.repository.owner.avatar_url
            };

      - name: Read wrangler.jsonc
        id: wrangler
        run: |
          node - << 'NODE'
          const fs = require('fs');
          const path = './wrangler.jsonc';

          try {
            const raw = fs.readFileSync(path, 'utf8');
            const stripped = raw
              .replace(/\/\*[\s\S]*?\*\//g, '')
              .replace(/^\s*\/\/.*$/mg, '');
            const json = JSON.parse(stripped);
            const name = json?.name ?? '';
            const domain = json?.routes?.[0]?.pattern ?? '';

            fs.appendFileSync(process.env.GITHUB_OUTPUT, `name=${name}\n`);
            fs.appendFileSync(process.env.GITHUB_OUTPUT, `domain=${domain}\n`);
          } catch (e) {
            console.error('Error reading wrangler.jsonc:', e);

            fs.appendFileSync(process.env.GITHUB_OUTPUT, 'name=\n');
            fs.appendFileSync(process.env.GITHUB_OUTPUT, 'domain=\n');
          }
          NODE

      - name: Setup Slack Payload
        id: slack-payload
        uses: ./.github/actions/setup-slack-payload
        with:
          slack_channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          deployed: ${{ needs.deploy.outputs.result == 'success' }}
          cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare_worker_name: ${{ steps.wrangler.outputs.name }}
          cloudflare_worker_domain: ${{ steps.wrangler.outputs.domain }}
          pr_commit: ${{ fromJSON(steps.pr.outputs.result).commit }}
          pr_number: ${{ fromJSON(steps.pr.outputs.result).number }}
          pr_title: ${{ fromJSON(steps.pr.outputs.result).title }}
          pr_url: ${{ fromJSON(steps.pr.outputs.result).url }}
          avatar_url: ${{ fromJSON(steps.pr.outputs.result).avatar_url }}

      - name: Send slack message
        uses: slackapi/slack-github-action@v2
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload-file-path: ${{ steps.slack-payload.outputs.file-path }}
